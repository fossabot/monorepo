{"index: basic":{"skip":false,"todo":false,"run":false,"isPending":false,"isRejected":false,"isFulfilled":true,"id":1,"str":"(t) => {\n  t.strictEqual(typeof applyPlugins, 'function');\n  t.strictEqual(typeof mappers, 'object');\n  t.strictEqual(typeof mappers.mentions, 'function');\n  t.strictEqual(typeof mappers.increment, 'function');\n  t.strictEqual(Array.isArray(plugins), true);\n  t.strictEqual(plugins.length, 2);\n}","title":"index: basic"},"should apply increment plugin add `increment: patch` property to Commit objects":{"skip":false,"todo":false,"run":false,"isPending":false,"isRejected":false,"isFulfilled":true,"id":2,"str":"(t) => {\n  const commitMsg = dedent`fix(fox): bar qux\n\n  resolves #123\n  closes #1111\n\n  Awesome\n  Signed-off-by: Bar Qux`;\n\n  const commitObj = {\n    header: { type: 'fix', scope: 'fox', subject: 'bar qux' },\n    body: 'resolves #123\\ncloses #1111',\n    footer: 'Awesome\\nSigned-off-by: Bar Qux',\n    increment: 'patch',\n    isBreaking: false,\n  };\n\n  const [commit] = applyPlugins(mappers.increment, parse(commitMsg));\n\n  t.deepStrictEqual(commit, commitObj);\n}","title":"should apply increment plugin add `increment: patch` property to Commit objects"},"should apply increment plugin add `increment: minor` property to Commit objects":{"skip":false,"todo":false,"run":false,"isPending":false,"isRejected":false,"isFulfilled":true,"id":3,"str":"(t) => {\n  const [commit] = applyPlugins(mappers.increment, parse('feat(bar): bar qux'));\n\n  t.deepStrictEqual(commit.increment, 'minor');\n  t.deepStrictEqual(commit.isBreaking, false);\n}","title":"should apply increment plugin add `increment: minor` property to Commit objects"},"should apply increment plugin add `increment: major` property to Commit objects":{"skip":false,"todo":false,"run":false,"isPending":false,"isRejected":false,"isFulfilled":true,"id":4,"str":"(t) => {\n  const [commit] = applyPlugins(\n    mappers.increment,\n    parse('major(bar): bar qux'),\n  );\n\n  t.deepStrictEqual(commit.increment, 'major');\n  t.deepStrictEqual(commit.isBreaking, true);\n}","title":"should apply increment plugin add `increment: major` property to Commit objects"},"should increment plugin consider `major` when find `BREAKING CHANGE: ` label":{"skip":false,"todo":false,"run":false,"isPending":false,"isRejected":false,"isFulfilled":true,"id":5,"str":"(t) => {\n  const [res] = applyPlugins(\n    mappers.increment,\n    parse(\n      dedent`fix: bar qux\n\n      BREAKING CHANGE: ooh ouch!`,\n    ),\n  );\n\n  t.strictEqual(res.increment, 'major');\n  t.strictEqual(res.isBreaking, true);\n  t.strictEqual(res.header.type, 'fix');\n  t.strictEqual(res.header.scope, null);\n  t.strictEqual(res.header.subject, 'bar qux');\n  t.strictEqual(res.body, 'BREAKING CHANGE: ooh ouch!');\n}","title":"should increment plugin consider `major` when find `BREAKING CHANGE: ` label"},"should add mentions plugin and `mentions: Array<Mention>` property":{"skip":false,"todo":false,"run":false,"isPending":false,"isRejected":false,"isFulfilled":true,"id":6,"str":"(t) => {\n  const [res] = applyPlugins(mappers.mentions, parse('fix: bar @qux zaz'));\n\n  t.deepStrictEqual(res.header, {\n    type: 'fix',\n    scope: null,\n    subject: 'bar @qux zaz',\n  });\n  t.deepStrictEqual(res.mentions, [\n    { handle: '@qux', mention: 'qux', index: 3 },\n  ]);\n}","title":"should add mentions plugin and `mentions: Array<Mention>` property"},"should add both mentions and increment plugins and respective props to Commit object":{"skip":false,"todo":false,"run":false,"isPending":false,"isRejected":false,"isFulfilled":true,"id":7,"str":"(t) => {\n  const commits = parse(\n    'chore(ci): yeah @bar & @qux zaz\\n\\nBREAKING CHANGE: oh yeah',\n  );\n  const [res] = applyPlugins(plugins, commits);\n\n  t.deepStrictEqual(res.mentions, [\n    { handle: '@bar', mention: 'bar', index: 4 },\n    { handle: '@qux', mention: 'qux', index: 11 },\n  ]);\n  t.strictEqual(res.isBreaking, true);\n  t.strictEqual(res.increment, 'major');\n  t.strictEqual(res.header.type, 'chore');\n  t.strictEqual(res.header.scope, 'ci');\n  t.strictEqual(res.header.subject, 'yeah @bar & @qux zaz');\n  t.strictEqual(res.body, 'BREAKING CHANGE: oh yeah');\n}","title":"should add both mentions and increment plugins and respective props to Commit object"},"should result.increment be false if no bump needed":{"skip":false,"todo":false,"run":false,"isPending":false,"isRejected":false,"isFulfilled":true,"id":8,"str":"(t) => {\n  const [result] = applyPlugins(mappers.increment, parse('chore(zz): foo bar'));\n\n  t.strictEqual(result.increment, false);\n  t.strictEqual(result.isBreaking, false);\n  t.strictEqual(result.header.type, 'chore');\n  t.strictEqual(result.header.scope, 'zz');\n  t.strictEqual(result.header.subject, 'foo bar');\n}","title":"should result.increment be false if no bump needed"}}